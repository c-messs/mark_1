set SERVEROUTPUT ON FORMAT WRAPPED
set APPINFO ON
SET VERIFY OFF

SET FEEDBACK OFF
SET TERMOUT OFF

column date_column new_value today_var
column scriptname new_value thescriptname;
column sessionname new_value sessionname;
column dbname new_value dbname;
select 
	SUBSTR(sys_context('USERENV', 'MODULE'), instr(sys_context('USERENV', 'MODULE'), ' ') +1) || '_' || to_char(sysdate, 'yyyymmdd') date_column,
  	sys_context('USERENV', 'MODULE') scriptname,
	sys_context('USERENV','SESSION_USER') sessionname,
	sys_context('USERENV','DB_NAME') dbname
from dual;
  
SPOOL &today_var..log

SET VERIFY ON
SET FEEDBACK ON
SET TERMOUT On
SET ECHO ON 

insert into appdba_util.scriptinventory (
SCRIPTNAME,
CREATEDATE,
SCHEMANAME,
DATABASE,
ROLLBACKIND,
FAILUREIND,
localGlobalInd)
values
('&thescriptname',
 sysdate,
 '&sessionname',
 '&dbname',
 'N',
 'N',
 'G');
commit;

select count(*) from sbmerrorwarningtype;
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-001') when matched then update set SBMErrorWarningTypeNm='Required Tag Missing' ,SBMErrorWarningTypeDesc = 'Required Tag Missing'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-001','Required Tag Missing','Required Tag Missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-002') when matched then update set SBMErrorWarningTypeNm='Exceeds Tag Maximum Frequency' ,SBMErrorWarningTypeDesc = 'Exceeds Tag Maximum Frequency'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-002','Exceeds Tag Maximum Frequency','Exceeds Tag Maximum Frequency');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-003') when matched then update set SBMErrorWarningTypeNm='Required Element missing' ,SBMErrorWarningTypeDesc = 'Required Element missing'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-003','Required Element missing','Required Element missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-004') when matched then update set SBMErrorWarningTypeNm='Invalid Format' ,SBMErrorWarningTypeDesc = 'Invalid Format'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-004','Invalid Format','Invalid Format');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-005') when matched then update set SBMErrorWarningTypeNm='Exceeds Element Frequency' ,SBMErrorWarningTypeDesc = 'Exceeds Element Frequency'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-005','Exceeds Element Frequency','Exceeds Element Frequency');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-006') when matched then update set SBMErrorWarningTypeNm='Exceeds allowed characters' ,SBMErrorWarningTypeDesc = 'Exceeds allowed characters'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-006','Exceeds allowed characters','Exceeds allowed characters');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-007') when matched then update set SBMErrorWarningTypeNm='Duplicate Filename within the ZIP file' ,SBMErrorWarningTypeDesc = 'Duplicate Filename within the ZIP file'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-007','Duplicate Filename within the ZIP file','Duplicate Filename within the ZIP file');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-008') when matched then update set SBMErrorWarningTypeNm='Date outside range' ,SBMErrorWarningTypeDesc = 'Date outside range'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-008','Date outside range','Date outside range');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-009') when matched then update set SBMErrorWarningTypeNm='Amount exceeds allowable' ,SBMErrorWarningTypeDesc = 'Amount exceeds allowable'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-009','Amount exceeds allowable','Amount exceeds allowable');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-010') when matched then update set SBMErrorWarningTypeNm='Invalid ZIP file format' ,SBMErrorWarningTypeDesc = 'Invalid ZIP file format'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-010','Invalid ZIP file format','Invalid ZIP file format');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-011') when matched then update set SBMErrorWarningTypeNm='Mismatched SourceID in ZIP file' ,SBMErrorWarningTypeDesc = 'Mismatched SourceID in ZIP file'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-011','Mismatched SourceID in ZIP file','Mismatched SourceID in ZIP file');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-012') when matched then update set SBMErrorWarningTypeNm='Duplicate Filename' ,SBMErrorWarningTypeDesc = 'Duplicate Filename'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-012','Duplicate Filename','Duplicate Filename');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-013') when matched then update set SBMErrorWarningTypeNm='Invalid XML' ,SBMErrorWarningTypeDesc = 'Invalid XML'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-013','Invalid XML','Invalid XML');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-014') when matched then update set SBMErrorWarningTypeNm='Foreign XML Tag Failure' ,SBMErrorWarningTypeDesc = 'Foreign XML Tag Failure'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-014','Foreign XML Tag Failure','Foreign XML Tag Failure');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-015') when matched then update set SBMErrorWarningTypeNm='Invalid CoverageYear' ,SBMErrorWarningTypeDesc = 'Invalid CoverageYear'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-015','Invalid CoverageYear','Invalid CoverageYear');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-016') when matched then update set SBMErrorWarningTypeNm='CoverageYear not yet accepted' ,SBMErrorWarningTypeDesc = 'CoverageYear not yet accepted'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-016','CoverageYear not yet accepted','CoverageYear not yet accepted');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-017') when matched then update set SBMErrorWarningTypeNm='CoverageYear prematurely sent' ,SBMErrorWarningTypeDesc = 'CoverageYear prematurely sent'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-017','CoverageYear prematurely sent','CoverageYear prematurely sent');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-018') when matched then update set SBMErrorWarningTypeNm='Duplicate FileId' ,SBMErrorWarningTypeDesc = 'Duplicate FileId'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-018','Duplicate FileId','Duplicate FileId');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-019') when matched then update set SBMErrorWarningTypeNm='Duplicate FileNumber for IssuerFileSetId' ,SBMErrorWarningTypeDesc = 'Duplicate FileNumber for IssuerFileSetId'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-019','Duplicate FileNumber for IssuerFileSetId','Duplicate FileNumber for IssuerFileSetId');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-020') when matched then update set SBMErrorWarningTypeNm='Improperly changed TotalIssuerFiles' ,SBMErrorWarningTypeDesc = 'Improperly changed TotalIssuerFiles'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-020','Improperly changed TotalIssuerFiles','Improperly changed TotalIssuerFiles');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-021') when matched then update set SBMErrorWarningTypeNm='FileNumber exceeds expected for IssuerFileSetId' ,SBMErrorWarningTypeDesc = 'FileNumber exceeds expected for IssuerFileSetId'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-021','FileNumber exceeds expected for IssuerFileSetId','FileNumber exceeds expected for IssuerFileSetId');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-022') when matched then update set SBMErrorWarningTypeNm='Expired IssuerFileSetId' ,SBMErrorWarningTypeDesc = 'Expired IssuerFileSetId'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-022','Expired IssuerFileSetId','Expired IssuerFileSetId');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-023') when matched then update set SBMErrorWarningTypeNm='Duplicate ExchangeAssignedPolicyId' ,SBMErrorWarningTypeDesc = 'Duplicate ExchangeAssignedPolicyId'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-023','Duplicate ExchangeAssignedPolicyId','Duplicate ExchangeAssignedPolicyId');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-024') when matched then update set SBMErrorWarningTypeNm='Invalid QHPId for SBM' ,SBMErrorWarningTypeDesc = 'Invalid QHPId for SBM'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-024','Invalid QHPId for SBM','Invalid QHPId for SBM');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-025') when matched then update set SBMErrorWarningTypeNm='Unexpected QHPId in Issuer file' ,SBMErrorWarningTypeDesc = 'Unexpected QHPId in Issuer file'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-025','Unexpected QHPId in Issuer file','Unexpected QHPId in Issuer file');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-026') when matched then update set SBMErrorWarningTypeNm='PolicyStartDate exceeds CoverageYear' ,SBMErrorWarningTypeDesc = 'PolicyStartDate exceeds CoverageYear'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-026','PolicyStartDate exceeds CoverageYear','PolicyStartDate exceeds CoverageYear');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-027') when matched then update set SBMErrorWarningTypeNm='Invalid PolicyEndDate on Canceled Policy' ,SBMErrorWarningTypeDesc = 'Invalid PolicyEndDate on Canceled Policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-027','Invalid PolicyEndDate on Canceled Policy','Invalid PolicyEndDate on Canceled Policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-028') when matched then update set SBMErrorWarningTypeNm='MemberStartDate Missing' ,SBMErrorWarningTypeDesc = 'MemberStartDate Missing'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-028','MemberStartDate Missing','MemberStartDate Missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-029') when matched then update set SBMErrorWarningTypeNm='Multiple prorated nodes under one financial node cannot share the same month.' ,SBMErrorWarningTypeDesc = 'Multiple prorated nodes under one financial node cannot share the same month.'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-029','Multiple prorated nodes under one financial node cannot share the same month.','Multiple prorated nodes under one financial node cannot share the same month.');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-030') when matched then update set SBMErrorWarningTypeNm='Prorated nodes cannot span multiple months.' ,SBMErrorWarningTypeDesc = 'Prorated nodes cannot span multiple months.'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-030','Prorated nodes cannot span multiple months.','Prorated nodes cannot span multiple months.');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-031') when matched then update set SBMErrorWarningTypeNm='MemberStartDate less than PolicyStartDate' ,SBMErrorWarningTypeDesc = 'MemberStartDate less than PolicyStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-031','MemberStartDate less than PolicyStartDate','MemberStartDate less than PolicyStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-032') when matched then update set SBMErrorWarningTypeNm='MemberEndDate exceeds PolicyEndDate' ,SBMErrorWarningTypeDesc = 'MemberEndDate exceeds PolicyEndDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-032','MemberEndDate exceeds PolicyEndDate','MemberEndDate exceeds PolicyEndDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-033') when matched then update set SBMErrorWarningTypeNm='Overlapping FinancialInformation Periods' ,SBMErrorWarningTypeDesc = 'Overlapping FinancialInformation Periods'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-033','Overlapping FinancialInformation Periods','Overlapping FinancialInformation Periods');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-034') when matched then update set SBMErrorWarningTypeNm='Gap in FinancialInformation Periods' ,SBMErrorWarningTypeDesc = 'Gap in FinancialInformation Periods'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-034','Gap in FinancialInformation Periods','Gap in FinancialInformation Periods');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-035') when matched then update set SBMErrorWarningTypeNm='FinancialEffectiveStartDate misaligned with PolicyStartDate' ,SBMErrorWarningTypeDesc = 'FinancialEffectiveStartDate misaligned with PolicyStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-035','FinancialEffectiveStartDate misaligned with PolicyStartDate','FinancialEffectiveStartDate misaligned with PolicyStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-036') when matched then update set SBMErrorWarningTypeNm='FinancialEffectiveEndDate misaligned with PolicyEndDate' ,SBMErrorWarningTypeDesc = 'FinancialEffectiveEndDate misaligned with PolicyEndDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-036','FinancialEffectiveEndDate misaligned with PolicyEndDate','FinancialEffectiveEndDate misaligned with PolicyEndDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-037') when matched then update set SBMErrorWarningTypeNm='FinancialEffectiveStartDate after PolicyEndDate' ,SBMErrorWarningTypeDesc = 'FinancialEffectiveStartDate after PolicyEndDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-037','FinancialEffectiveStartDate after PolicyEndDate','FinancialEffectiveStartDate after PolicyEndDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-038') when matched then update set SBMErrorWarningTypeNm='MonthlyAPTCAmount exceeds MonthlyTotalPremiumAmount' ,SBMErrorWarningTypeDesc = 'MonthlyAPTCAmount exceeds MonthlyTotalPremiumAmount'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-038','MonthlyAPTCAmount exceeds MonthlyTotalPremiumAmount','MonthlyAPTCAmount exceeds MonthlyTotalPremiumAmount');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-039') when matched then update set SBMErrorWarningTypeNm='MonthlyTotalPremiumAmount misaligned with underlying amounts' ,SBMErrorWarningTypeDesc = 'MonthlyTotalPremiumAmount misaligned with underlying amounts'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-039','MonthlyTotalPremiumAmount misaligned with underlying amounts','MonthlyTotalPremiumAmount misaligned with underlying amounts');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-040') when matched then update set SBMErrorWarningTypeNm='MonthlyCSRAmount Missing' ,SBMErrorWarningTypeDesc = 'MonthlyCSRAmount Missing'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-040','MonthlyCSRAmount Missing','MonthlyCSRAmount Missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-041') when matched then update set SBMErrorWarningTypeNm='MonthlyCSRAmount Not Expected' ,SBMErrorWarningTypeDesc = 'MonthlyCSRAmount Not Expected'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-041','MonthlyCSRAmount Not Expected','MonthlyCSRAmount Not Expected');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-042') when matched then update set SBMErrorWarningTypeNm='QHPID and CSRVariantID mismatch' ,SBMErrorWarningTypeDesc = 'QHPID and CSRVariantID mismatch'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-042','QHPID and CSRVariantID mismatch','QHPID and CSRVariantID mismatch');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-043') when matched then update set SBMErrorWarningTypeNm='Overlap in ProratedAmount nodes' ,SBMErrorWarningTypeDesc = 'Overlap in ProratedAmount nodes'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-043','Overlap in ProratedAmount nodes','Overlap in ProratedAmount nodes');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-044') when matched then update set SBMErrorWarningTypeNm='Gap in ProratedAmount nodes' ,SBMErrorWarningTypeDesc = 'Gap in ProratedAmount nodes'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-044','Gap in ProratedAmount nodes','Gap in ProratedAmount nodes');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-045') when matched then update set SBMErrorWarningTypeNm='ProratedAmount misaligned with parent FinancialInformation' ,SBMErrorWarningTypeDesc = 'ProratedAmount misaligned with parent FinancialInformation'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-045','ProratedAmount misaligned with parent FinancialInformation','ProratedAmount misaligned with parent FinancialInformation');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-046') when matched then update set SBMErrorWarningTypeNm='ProratedAmount node missing for month' ,SBMErrorWarningTypeDesc = 'ProratedAmount node missing for month'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-046','ProratedAmount node missing for month','ProratedAmount node missing for month');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-047') when matched then update set SBMErrorWarningTypeNm='PartialMonthEffectiveStartDate precedes FinancialEffectiveStartDate' ,SBMErrorWarningTypeDesc = 'PartialMonthEffectiveStartDate precedes FinancialEffectiveStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-047','PartialMonthEffectiveStartDate precedes FinancialEffectiveStartDate','PartialMonthEffectiveStartDate precedes FinancialEffectiveStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-048') when matched then update set SBMErrorWarningTypeNm='PartialMonthEffectiveEndDate exceeds FinancialEffectiveEndDate' ,SBMErrorWarningTypeDesc = 'PartialMonthEffectiveEndDate exceeds FinancialEffectiveEndDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-048','PartialMonthEffectiveEndDate exceeds FinancialEffectiveEndDate','PartialMonthEffectiveEndDate exceeds FinancialEffectiveEndDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-049') when matched then update set SBMErrorWarningTypeNm='PartialMonthPremiumAmount exceeds MonthlyTotalPremiumAmount' ,SBMErrorWarningTypeDesc = 'PartialMonthPremiumAmount exceeds MonthlyTotalPremiumAmount'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-049','PartialMonthPremiumAmount exceeds MonthlyTotalPremiumAmount','PartialMonthPremiumAmount exceeds MonthlyTotalPremiumAmount');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-050') when matched then update set SBMErrorWarningTypeNm='MonthlyAPTCAmount exceeds PartialMonthPremiumAmount' ,SBMErrorWarningTypeDesc = 'MonthlyAPTCAmount exceeds PartialMonthPremiumAmount'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-050','MonthlyAPTCAmount exceeds PartialMonthPremiumAmount','MonthlyAPTCAmount exceeds PartialMonthPremiumAmount');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-051') when matched then update set SBMErrorWarningTypeNm='PartialMonthAPTCAmount exceeds MonthlyAPTCAmount' ,SBMErrorWarningTypeDesc = 'PartialMonthAPTCAmount exceeds MonthlyAPTCAmount'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-051','PartialMonthAPTCAmount exceeds MonthlyAPTCAmount','PartialMonthAPTCAmount exceeds MonthlyAPTCAmount');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-052') when matched then update set SBMErrorWarningTypeNm='PartialMonthAPTCAmount exceeds PartialMonthPremiumAmount' ,SBMErrorWarningTypeDesc = 'PartialMonthAPTCAmount exceeds PartialMonthPremiumAmount'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-052','PartialMonthAPTCAmount exceeds PartialMonthPremiumAmount','PartialMonthAPTCAmount exceeds PartialMonthPremiumAmount');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-053') when matched then update set SBMErrorWarningTypeNm='PartialMonthCSRAmount not expected' ,SBMErrorWarningTypeDesc = 'PartialMonthCSRAmount not expected'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-053','PartialMonthCSRAmount not expected','PartialMonthCSRAmount not expected');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-054') when matched then update set SBMErrorWarningTypeNm='MemberEndDate not sent with multiple MemberStartDate' ,SBMErrorWarningTypeDesc = 'MemberEndDate not sent with multiple MemberStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-054','MemberEndDate not sent with multiple MemberStartDate','MemberEndDate not sent with multiple MemberStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-055') when matched then update set SBMErrorWarningTypeNm='Non-Effectuated Policy' ,SBMErrorWarningTypeDesc = 'Non-Effectuated Policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-055','Non-Effectuated Policy','Non-Effectuated Policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-056') when matched then update set SBMErrorWarningTypeNm='QHPID has changed' ,SBMErrorWarningTypeDesc = 'QHPID has changed'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-056','QHPID has changed','QHPID has changed');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-057') when matched then update set SBMErrorWarningTypeNm='Error Threshold Exceeded for File' ,SBMErrorWarningTypeDesc = 'Error Threshold Exceeded for File'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-057','Error Threshold Exceeded for File','Error Threshold Exceeded for File');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-058') when matched then update set SBMErrorWarningTypeNm='Earliest FinancialEffectiveStartDate month more than one month of PolicyStartDate' ,SBMErrorWarningTypeDesc = 'Earliest FinancialEffectiveStartDate month more than one month of PolicyStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-058','Earliest FinancialEffectiveStartDate month more than one month of PolicyStartDate','Earliest FinancialEffectiveStartDate month more than one month of PolicyStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-059') when matched then update set SBMErrorWarningTypeNm='Earliest FinancialEffectiveStartDate less than PolicyStartDate' ,SBMErrorWarningTypeDesc = 'Earliest FinancialEffectiveStartDate less than PolicyStartDate'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-059','Earliest FinancialEffectiveStartDate less than PolicyStartDate','Earliest FinancialEffectiveStartDate less than PolicyStartDate');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-060') when matched then update set SBMErrorWarningTypeNm='No subscriber on policy' ,SBMErrorWarningTypeDesc = 'No subscriber on policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-060','No subscriber on policy','No subscriber on policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-061') when matched then update set SBMErrorWarningTypeNm='Multiple subscribers on a policy' ,SBMErrorWarningTypeDesc = 'Multiple subscribers on a policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-061','Multiple subscribers on a policy','Multiple subscribers on a policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-062') when matched then update set SBMErrorWarningTypeNm='Invalid PolicyEndDate on an Effectuated Policy' ,SBMErrorWarningTypeDesc = 'Invalid PolicyEndDate on an Effectuated Policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-062','Invalid PolicyEndDate on an Effectuated Policy','Invalid PolicyEndDate on an Effectuated Policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-063') when matched then update set SBMErrorWarningTypeNm='Invalid file name' ,SBMErrorWarningTypeDesc = 'Invalid file name'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-063','Invalid file name','Invalid file name');
-- 7/31/2016 Thomas Fidd
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-500') when matched then update set SBMErrorWarningTypeNm='LineNumber Missing' ,SBMErrorWarningTypeDesc = 'LineNumber Missing' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-500','LineNumber Missing','LineNumber Missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-501') when matched then update set SBMErrorWarningTypeNm='Missing TenantID' ,SBMErrorWarningTypeDesc = 'Missing TenantID'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-501','Missing TenantID','Missing TenantID');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-502') when matched then update set SBMErrorWarningTypeNm='Missing Status' ,SBMErrorWarningTypeDesc = 'Missing Status'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-502','Missing Status','Missing Status');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-503') when matched then update set SBMErrorWarningTypeNm='Missing FileID or IssuerFileSetID' ,SBMErrorWarningTypeDesc = 'Missing FileID or IssuerFileSetID'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-503','Missing FileID or IssuerFileSetID','Missing FileID or IssuerFileSetID');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-504') when matched then update set SBMErrorWarningTypeNm='Both FileID and IssuerFileSetID provided' ,SBMErrorWarningTypeDesc = 'Both FileID and IssuerFileSetID provided'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-504','Both FileID and IssuerFileSetID provided','Both FileID and IssuerFileSetID provided');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-505') when matched then update set SBMErrorWarningTypeNm='IssuerID missing' ,SBMErrorWarningTypeDesc = 'IssuerID missing'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-505','IssuerID missing','IssuerID missing');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-506') when matched then update set SBMErrorWarningTypeNm='IssuerFileSetID not applicable to Bypass' ,SBMErrorWarningTypeDesc = 'IssuerFileSetID not applicable to Bypass'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-506','IssuerFileSetID not applicable to Bypass','IssuerFileSetID not applicable to Bypass');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-507') when matched then update set SBMErrorWarningTypeNm='File to Bypass not found' ,SBMErrorWarningTypeDesc = 'File to Bypass not found'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-507','File to Bypass not found','File to Bypass not found');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-508') when matched then update set SBMErrorWarningTypeNm='File to Bypass not in Freeze' ,SBMErrorWarningTypeDesc = 'File to Bypass not in Freeze'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-508','File to Bypass not in Freeze','File to Bypass not in Freeze');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-509') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to Approve not found' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to Approve not found'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-509','File or IssuerFileSet to Approve not found','File or IssuerFileSet to Approve not found');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-510') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to approve not ready for approval' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to approve not ready for approval'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-510','File or IssuerFileSet to approve not ready for approval','File or IssuerFileSet to approve not ready for approval');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-511') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to Disapprove not found' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to Disapprove not found' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-511','File or IssuerFileSet to Disapprove not found','File or IssuerFileSet to Disapprove not found');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-512') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet not ready for approval' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet not ready for approval' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-512','File or IssuerFileSet not ready for approval','File or IssuerFileSet not ready for approval');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-513') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to reverse not found' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to reverse not found' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-513','File or IssuerFileSet to reverse not found','File or IssuerFileSet to reverse not found');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-514') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to reverse not latest' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to reverse not latest' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-514','File or IssuerFileSet to reverse not latest','File or IssuerFileSet to reverse not latest');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-515') when matched then update set SBMErrorWarningTypeNm='File or IssuerFileSet to reverse has invalid status' ,SBMErrorWarningTypeDesc = 'File or IssuerFileSet to reverse has invalid status' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-515','File or IssuerFileSet to reverse has invalid status','File or IssuerFileSet to reverse has invalid status');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-516') when matched then update set SBMErrorWarningTypeNm='Duplicate FileID or FileSet in Template' ,SBMErrorWarningTypeDesc = 'Duplicate FileID or FileSet in Template' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-516','Duplicate FileID or FileSet in Template','Duplicate FileID or FileSet in Template');
-- End 7/31/2016 add
-- 8/1/2016 Thomas Fidd - Add two new codes
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-517') when matched then update set SBMErrorWarningTypeNm='File header columns out of sequence' ,SBMErrorWarningTypeDesc = 'File header columns out of sequence' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-517','File header columns out of sequence','File header columns out of sequence');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-518') when matched then update set SBMErrorWarningTypeNm='Invalid Status update value' ,SBMErrorWarningTypeDesc = 'Invalid Status update value' When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-518','Invalid Status update value','Invalid Status update value');
-- End 8/1/2016 add
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-997') when matched then update set SBMErrorWarningTypeNm='State not authorized for file submission' ,SBMErrorWarningTypeDesc = 'State not authorized for file submission'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-997','State not authorized for file submission','State not authorized for file submission');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-998') when matched then update set SBMErrorWarningTypeNm='Unexpected Schema Error' ,SBMErrorWarningTypeDesc = 'Unexpected Schema Error'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-998','Unexpected Schema Error','Unexpected Schema Error');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'ER-999') when matched then update set SBMErrorWarningTypeNm='Internal system failure' ,SBMErrorWarningTypeDesc = 'Internal system failure'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('ER-999','Internal system failure','Internal system failure');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-001') when matched then update set SBMErrorWarningTypeNm='File Received in Freeze Period and Held' ,SBMErrorWarningTypeDesc = 'File Received in Freeze Period and Held'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-001','File Received in Freeze Period and Held','File Received in Freeze Period and Held');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-002') when matched then update set SBMErrorWarningTypeNm='File on hold until previous file is approved' ,SBMErrorWarningTypeDesc = 'File on hold until previous file is approved'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-002','File on hold until previous file is approved','File on hold until previous file is approved');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-003') when matched then update set SBMErrorWarningTypeNm='File on hold until remaining files in IssuerFileSetID received' ,SBMErrorWarningTypeDesc = 'File on hold until remaining files in IssuerFileSetID received'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-003','File on hold until remaining files in IssuerFileSetID received','File on hold until remaining files in IssuerFileSetID received');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-004') when matched then update set SBMErrorWarningTypeNm='Field value was truncated' ,SBMErrorWarningTypeDesc = 'Field value was truncated'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-004','Field value was truncated','Field value was truncated');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-005') when matched then update set SBMErrorWarningTypeNm='Field value was nullified' ,SBMErrorWarningTypeDesc = 'Field value was nullified'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-005','Field value was nullified','Field value was nullified');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-006') when matched then update set SBMErrorWarningTypeNm='MonthlyCSRAmount sent as 0 for 01 variant' ,SBMErrorWarningTypeDesc = 'MonthlyCSRAmount sent as 0 for 01 variant'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-006','MonthlyCSRAmount sent as 0 for 01 variant','MonthlyCSRAmount sent as 0 for 01 variant');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-007') when matched then update set SBMErrorWarningTypeNm='MonthlyCSRAmount corrected by CMS' ,SBMErrorWarningTypeDesc = 'MonthlyCSRAmount corrected by CMS'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-007','MonthlyCSRAmount corrected by CMS','MonthlyCSRAmount corrected by CMS');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-008') when matched then update set SBMErrorWarningTypeNm='PartialMonthCSRAmount corrected by CMS' ,SBMErrorWarningTypeDesc = 'PartialMonthCSRAmount corrected by CMS'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-008','PartialMonthCSRAmount corrected by CMS','PartialMonthCSRAmount corrected by CMS');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-009') when matched then update set SBMErrorWarningTypeNm='InsuranceLineCode changed on matching policy' ,SBMErrorWarningTypeDesc = 'InsuranceLineCode changed on matching policy'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-009','InsuranceLineCode changed on matching policy','InsuranceLineCode changed on matching policy');
MERGE INTO SBMErrorWarningType using dual ON ( SBMErrorWarningTypeCd = 'WR-010') when matched then update set SBMErrorWarningTypeNm='Previous Member not provided in Policy record' ,SBMErrorWarningTypeDesc = 'Previous Member not provided in Policy record'  When not matched then insert(SBMErrorWarningTypeCd,SBMErrorWarningTypeNm ,  SBMErrorWarningTypeDesc) values ('WR-010','Previous Member not provided in Policy record','Previous Member not provided in Policy record');
select count(*) from sbmerrorwarningtype;

commit;

spool off
