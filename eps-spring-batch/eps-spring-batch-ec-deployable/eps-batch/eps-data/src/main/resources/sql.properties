
#Sql Properties
SELECT_ERROR_LIST_BY_TRANS_ID=select ERRORWARNINGDETAILEDDESC, BIZAPPACKERRORCD, ERRORELEMENT, TRANSMSGID, PROCESSINGERRORCD, TRANSMSGFILEINFOID, BATCHID from ErrorWarningLog where transMsgId = ? 

SELECT_BATCH_TRANS_MSG_BY_PK=select TRANSMSGID, BATCHID, PROCESSEDTODBSTATUSTYPECD, EXCHANGEPOLICYID, SUBSCRIBERSTATECD, ISSUERHIOSID, SOURCEVERSIONID, SOURCEVERSIONDATETIME, TRANSMSGSKIPREASONTYPECD, TRANSMSGSKIPREASONDESC from BatchTransMsg where ((batchId=?) and (transMsgId=?))
SELECT_PREV_SKIPPED_VERSIONS=SELECT COUNT(TRANSMSGID) AS SKIPCOUNT FROM BATCHTRANSMSG WHERE PROCESSEDTODBSTATUSTYPECD = 'S' AND SUBSCRIBERSTATECD = ? AND EXCHANGEPOLICYID = ? AND ISSUERHIOSID = ? AND SOURCEVERSIONID < ?
SELECT_SKIPPED_VERSION_COUNT=SELECT COUNT(TRANSMSGID) AS SKIPCOUNT FROM BATCHTRANSMSG WHERE PROCESSEDTODBSTATUSTYPECD IN ('S','R') AND SUBSCRIBERSTATECD = ? AND EXCHANGEPOLICYID = ? AND ISSUERHIOSID = ? AND SOURCEVERSIONID = ? AND BATCHID != ?
SELECT_PREAUDIT_INGEST_STATUS=SELECT preAuditExtractCompletionInd FROM BATCHRUNCONTROL WHERE CREATEDATETIME = (SELECT MAX(CREATEDATETIME) FROM BATCHRUNCONTROL)
SELECT_MAX_POLICY_MAINTENANCESTARTDATETIME=select MAX(MAINTENANCESTARTDATETIME) FROM POLICYVERSION

UPDATE_PROCESSED_TO_DB_STATUS = update BatchTransMsg set PROCESSEDTODBSTATUSTYPECD = ?, TRANSMSGSKIPREASONTYPECD = ?, TRANSMSGSKIPREASONDESC = ?,  LASTMODIFIEDBY = ?, LASTMODIFIEDDATETIME = SYSDATE where ((transMsgId=?)and(batchId=?))
UPDATE_SKIPPED_VERSION = UPDATE BATCHTRANSMSG SET PROCESSEDTODBSTATUSTYPECD = ?, LASTMODIFIEDBY = ?, LASTMODIFIEDDATETIME = SYSDATE WHERE PROCESSEDTODBSTATUSTYPECD IN ('S','R') AND SUBSCRIBERSTATECD = ? AND EXCHANGEPOLICYID = ? AND ISSUERHIOSID = ? AND SOURCEVERSIONID = ? AND BATCHID != ?
UPDATE_LATER_VERSIONS = UPDATE BATCHTRANSMSG SET PROCESSEDTODBSTATUSTYPECD = ?, LASTMODIFIEDBY = ?, LASTMODIFIEDDATETIME = SYSDATE WHERE SUBSCRIBERSTATECD = ? AND PROCESSEDTODBSTATUSTYPECD = 'S' AND EXCHANGEPOLICYID = ? AND ISSUERHIOSID = ? AND SOURCEVERSIONID > ?


#Policy
SELECT_POLICY_VERSION_BY_ID_AND_STATE=select POLICYVERSIONID, SUBSCRIBERSTATECD, EXCHANGEPOLICYID, MAINTENANCESTARTDATETIME, MAINTENANCEENDDATETIME, ISSUERPOLICYID, ISSUERHIOSID, ISSUERTAXPAYERID, ISSUERNM, ISSUERSUBSCRIBERID, EXCHANGEASSIGNEDSUBSCRIBERID, TRANSDATETIME, TRANSCONTROLNUM,  POLICYSTARTDATE, POLICYENDDATE, PREMIUMPAIDTOENDDATE, LASTPREMIUMPAIDDATE, PAYMENTTRANSID, PLANID, EMPLOYERGROUPNUM, X12INSRNCLINETYPECD, INSRNCAPLCTNTYPECD, EMPLOYERIDENTIFICATIONNUM, TRANSMSGID, CHANGEREPORTEDDATE, X12COVERAGELEVELTYPECD, X12TRANSTYPECD, ELIGIBILITYSTARTDATE, ELIGIBILITYENDDATE, SOURCEVERSIONID, SOURCEVERSIONDATETIME, HEALTHCOVGMAINTEFFECTIVEDATE from PolicyVersion where PolicyVersionId = ? and SubscriberStateCd = ?
SELECT_LATEST_EPS_POLICY_BY_EXCHANGE_POLICY_ID_AND_SUBSCRIBER_STATE_CODE= select POLICYVERSIONID, SUBSCRIBERSTATECD, ISSUERHIOSID, TRANSMSGID, SOURCEVERSIONID, SOURCEVERSIONDATETIME, MARKETPLACEGROUPPOLICYID from POLICYVERSION where ( exchangePolicyId = ? ) and (subscriberStateCd = ? ) and (MAINTENANCEENDDATETIME > TO_TIMESTAMP('9999-12-31', 'YYYY-MM-DD'))
SELECT_POLICY_STATUS_LIST=select TRANSDATETIME, INSURANACEPOLICYSTATUSTYPECD from POLICYSTATUS where POLICYVERSIONID = ? order by TRANSDATETIME desc 

UPDATE_EPS_POLICY_DATE=UPDATE POLICYVERSION SET MAINTENANCEENDDATETIME = ?, LASTMODIFIEDBY = ?, LASTMODIFIEDDATETIME = SYSDATE  WHERE POLICYVERSIONID = ?


# Member 
# SELECT PolicyMember data by PolicyVersionId.  SELECT member data for ALL members of the policy
SELECT_PMV_BY_PVID_AND_STATE= SELECT pmv.POLICYMEMBERVERSIONID, pmv.EXCHANGEPOLICYID, pmv.SUBSCRIBERSTATECD, pmv.EXCHANGEMEMBERID, pmv.MAINTENANCESTARTDATETIME, pmv.MAINTENANCEENDDATETIME, pmv.ISSUERASSIGNEDMEMBERID, pmv.POLICYMEMBERELIGSTARTDATE, pmv.POLICYMEMBERELIGENDDATE, pmv.SUBSCRIBERIND, pmv.POLICYMEMBERBIRTHDATE, pmv.POLICYMEMBERLASTNM, pmv.POLICYMEMBERFIRSTNM, pmv.POLICYMEMBERMIDDLENM, pmv.POLICYMEMBERSALUTATIONNM, pmv.POLICYMEMBERSUFFIXNM, pmv.POLICYMEMBERSSN, pmv.TRANSMSGID, pmv.X12GENDERTYPECD, pmd.POLICYMEMBERSTARTDATE, pmd.POLICYMEMBERENDDATE FROM POLICYVERSION pv JOIN POLICYMEMBER pm ON pv.POLICYVERSIONID = pm.POLICYVERSIONID JOIN POLICYMEMBERVERSION pmv ON pm.POLICYMEMBERVERSIONID = pmv.POLICYMEMBERVERSIONID JOIN POLICYMEMBERDATE pmd ON pm.POLICYMEMBERVERSIONID = pmd.POLICYMEMBERVERSIONID WHERE pv.POLICYVERSIONID = ? AND pv.SUBSCRIBERSTATECD = ?
SELECT_PMV_ADDRESS = SELECT pma.POLICYMEMBERVERSIONID, pma.X12ADDRESSTYPECD, pma.STATECD, pma.ZIPPLUS4CD FROM POLICYVERSION pv JOIN POLICYMEMBER pm ON pv.POLICYVERSIONID = pm.POLICYVERSIONID JOIN POLICYMEMBERADDRESS pma ON pm.POLICYMEMBERVERSIONID = pma.POLICYMEMBERVERSIONID WHERE pv.POLICYVERSIONID = ?
SELECT_PMV_DATE = SELECT pmd.POLICYMEMBERVERSIONID, pmd.POLICYMEMBERSTARTDATE, pmd.POLICYMEMBERENDDATE FROM POLICYVERSION pv JOIN POLICYMEMBER pm ON pv.POLICYVERSIONID = pm.POLICYVERSIONID JOIN POLICYMEMBERDATE pmd ON pm.POLICYMEMBERVERSIONID = pmd.POLICYMEMBERVERSIONID WHERE pv.POLICYVERSIONID = ?

UPDATE_POLICY_MEMBER_VERSION = UPDATE POLICYMEMBERVERSION SET  MAINTENANCEENDDATETIME = ?, LASTMODIFIEDBY = ?, LASTMODIFIEDDATETIME = SYSDATE WHERE POLICYMEMBERVERSIONID = ?

#Insert StagingBER
INSERT_STAGING_BER=insert into StagingBER(transmsgfileinfoid,berxml) values(?,XMLType(?))


EXTRACT_TRANSMSG = INSERT INTO TRANSMSG (TRANSMSGID, TRANSMSGFILEINFOID, TRANSMSGDATETIME, MSG, TRANSMSGDIRECTIONTYPECD, TRANSMSGTYPECD, CREATEDATETIME, LASTMODIFIEDDATETIME, CREATEBY, LASTMODIFIEDBY, SUBSCRIBERSTATECD) (SELECT transMsgSeq.nextval, ?, SYSDATE, xmlType.createXML(x.OBJECT_VALUE.getCloBVal()) a,  ?,  ?,  SYSDATE,  SYSDATE, ?, ?, (SUBSTR(tmfi.GROUPSENDERID,6,2)) FROM TRANSMSGFILEINFO tmfi, StagingBER sb, TABLE(XMLSequence(extract(sb.berxml,'/BenefitEnrollmentRequest/BenefitEnrollmentMaintenance', 'xmlns="http://bem.dsh.cms.gov"'))) x  WHERE tmfi.TRANSMSGFILEINFOID = sb.TRANSMSGFILEINFOID AND tmfi.TRANSMSGFILEINFOID = ?)
